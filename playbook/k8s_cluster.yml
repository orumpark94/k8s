- name: Kubernetes Cluster Setup
  hosts: master:workers
  become: yes
  tasks:

    - name: Fetch the join command from Master
      shell: "export KUBECONFIG=/etc/kubernetes/admin.conf && kubeadm token create --print-join-command"
      register: join_command
      run_once: true
      when: "'master' in group_names"

    - name: Ensure join command is available for Worker Nodes
      set_fact:
        worker_join_command: "{{ join_command.stdout }}"
      run_once: true
      when: "'master' in group_names"

    - name: Propagate join command to Worker Nodes
      set_fact:
        worker_join_command: "{{ hostvars[groups['master'][0]]['worker_join_command'] }}"
      when: "'workers' in group_names"

    - name: Debug worker_join_command on Worker Nodes
      debug:
        msg: "{{ worker_join_command | default('worker_join_command is not set') }}"
      when: "'workers' in group_names"

    - name: Check if worker node is already joined
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: node_joined
      when: "'workers' in group_names"

    - name: Reset Kubernetes on Worker Nodes if already joined
      command: kubeadm reset -f
      when: 
        - "'workers' in group_names"
        - node_joined.stat.exists

    - name: Remove old CNI network config (Worker Nodes)
      file:
        path: /etc/cni/net.d
        state: absent
      when: 
        - "'workers' in group_names"
        - node_joined.stat.exists

    - name: Restart kubelet (Worker Nodes)
      systemd:
        name: kubelet
        state: restarted
      when: 
        - "'workers' in group_names"
        - node_joined.stat.exists

    - name: Join Worker Nodes to Cluster
      command: "{{ worker_join_command }}"
      when: 
        - "'workers' in group_names"
        - not node_joined.stat.exists
        - worker_join_command is defined
