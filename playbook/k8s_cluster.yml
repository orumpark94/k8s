- name: Kubernetes Cluster Setup
  hosts: master:workers
  become: yes
  tasks:

    # ✅ containerd 설정 (Kubernetes 조인 전에 적용)
    - name: Ensure containerd config.toml exists
      ansible.builtin.command: containerd config default > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Set SystemdCgroup in containerd config
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Restart and enable containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Verify containerd is running
      ansible.builtin.command: systemctl is-active containerd
      register: containerd_status
      failed_when: containerd_status.stdout != 'active'

    # ✅ 마스터 노드 설정 및 초기화 확인
    - name: Check if Kubernetes is already initialized (Master Node)
      stat:
        path: /etc/kubernetes/admin.conf
      register: kubeadm_initialized
      when: "'master' in group_names"

    - name: Initialize Kubernetes on Master Node if not initialized
      command: kubeadm init --pod-network-cidr=192.168.0.0/16
      when: "'master' in group_names and not kubeadm_initialized.stat.exists"

    - name: Setup kubeconfig for root user (Master Node)
      shell: |
        mkdir -p $HOME/.kube
        cp /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      when: "'master' in group_names and not kubeadm_initialized.stat.exists"

    # ✅ Kubernetes Join 과정 (마스터에서 토큰 자동 생성)
    - name: Generate kubeadm join token if none exists (Master Node)
      command: kubeadm token create --print-join-command
      register: kubeadm_join_cmd
      when: "'master' in group_names"

    - name: Set join command as fact (Master Node)
      set_fact:
        worker_join_command: "{{ kubeadm_join_cmd.stdout }}"
      when: "'master' in group_names"

    - name: Propagate join command to Worker Nodes
      set_fact:
        worker_join_command: "{{ hostvars[groups['master'][0]]['worker_join_command'] }}"
      when: "'workers' in group_names"

    - name: Debug worker_join_command on Worker Nodes
      debug:
        msg: "Worker Node Join Command: {{ worker_join_command if worker_join_command else 'No join command received' }}"
      when: "'workers' in group_names"

    # ✅ Worker 노드가 이미 조인된 경우 처리
    - name: Check if worker node is already joined
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: node_joined
      when: "'workers' in group_names"

    - name: Reset Kubernetes on Worker Nodes if already joined
      command: kubeadm reset -f
      when: 
        - "'workers' in group_names"
        - node_joined.stat.exists

    - name: Remove old CNI network config (Worker Nodes)
      file:
        path: /etc/cni/net.d
        state: absent
      when: 
        - "'workers' in group_names"
        - node_joined.stat.exists

    - name: Restart kubelet (Worker Nodes)
      systemd:
        name: kubelet
        state: restarted
      when: 
        - "'workers' in group_names"
        - node_joined.stat.exists

    # ✅ 최신 토큰을 이용하여 Worker 노드를 클러스터에 조인
    - name: Join Worker Nodes to Cluster
      command: "{{ worker_join_command }}"
      when: 
        - "'workers' in group_names"
        - not node_joined.stat.exists
        - worker_join_command is defined
      changed_when: false


