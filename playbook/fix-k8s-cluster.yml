- name: Fix Kubernetes Node Issues
  hosts: master,workers
  become: yes
  tasks:
    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Ensure Firewalld is installed
      ansible.builtin.yum:
        name: firewalld
        state: present

    - name: Enable and start Firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: yes

    - name: Open required Kubernetes ports
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
      loop:
        - 6443/tcp
        - 10250/tcp
      notify: Reload firewalld

    - name: Disable Swap
      ansible.builtin.command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Remove swap entry from /etc/fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^(.*swap.*)$'
        replace: '# \1'

    - name: Ensure /etc/hosts contains master and worker nodes
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        state: present
      loop:
        - "192.168.1.140 gitops-k8s-master"
        - "192.168.1.141 gitops-k8s-node1"
        - "192.168.1.142 gitops-k8s-node2 "

    # ✅ 커널 네트워크 브릿징 설정 추가
    - name: Ensure br_netfilter module is loaded
      ansible.builtin.modprobe:
        name: br_netfilter
        state: present

    - name: Ensure sysctl settings for Kubernetes networking
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables=1
          net.ipv4.ip_forward=1
      notify: Reload sysctl

    - name: Apply sysctl settings
      ansible.builtin.command: sysctl --system
      changed_when: false

    #- name: Ensure containerd config.toml exists
    #  ansible.builtin.command: containerd config default > /etc/containerd/config.toml
    #  args:
    #    creates: /etc/containerd/config.toml

    #- name: Set SystemdCgroup in containerd config
    #  ansible.builtin.replace:
    #    path: /etc/containerd/config.toml
    #    regexp: 'SystemdCgroup = false'
    #    replace: 'SystemdCgroup = true'

    #- name: Restart and enable containerd
    #  ansible.builtin.systemd:
    #    name: containerd
    #    state: restarted
    #    enabled: yes

    #- name: Verify containerd is running
    #  ansible.builtin.command: systemctl is-active containerd
    #  register: containerd_status
    #  failed_when: containerd_status.stdout != 'active'

  handlers:
    - name: Reload firewalld
      ansible.builtin.command: firewall-cmd --reload

    - name: Reload sysctl
      ansible.builtin.command: sysctl --system
      changed_when: false


